{
  "test_cases": [
    {
      "str1": "",
      "str2": ""
    },
    {
      "str1": "a",
      "str2": "a"
    },
    {
      "str1": "a",
      "str2": "b"
    },
    {
      "str1": "ab",
      "str2": "ac"
    },
    {
      "str1": "abc",
      "str2": "bc"
    },
    {
      "str1": "ab",
      "str2": "abc"
    },
    {
      "str1": "abc",
      "str2": "def"
    },
    {
      "str1": "open",
      "str2": "pen"
    },
    {
      "str1": "book",
      "str2": "back"
    },
    {
      "str1": "data",
      "str2": "date"
    },
    {
      "str1": "hello",
      "str2": "hola"
    },
    {
      "str1": "kitten",
      "str2": "sit"
    },
    {
      "str1": "time",
      "str2": "space"
    },
    {
      "str1": "code",
      "str2": "coder"
    },
    {
      "str1": "algo",
      "str2": "logic"
    },
    {
      "str1": "short",
      "str2": "long"
    },
    {
      "str1": "divide",
      "str2": "div"
    },
    {
      "str1": "pascal",
      "str2": "python"
    },
    {
      "str1": "dynamic",
      "str2": "drama"
    },
    {
      "str1": "kitten",
      "str2": "sitting"
    },
    {
      "str1": "abcdefg",
      "str2": "bcdefg"
    },
    {
      "str1": "this is",
      "str2": "that is"
    },
    {
      "str1": "algorithm",
      "str2": "algebra"
    },
    {
      "str1": "computer",
      "str2": "commuter"
    },
    {
      "str1": "polynomial",
      "str2": "binomial"
    },
    {
      "str1": "backtracking",
      "str2": "tracking"
    },
    {
      "str1": "levenshtein",
      "str2": "algorithm"
    },
    {
      "str1": "divide and",
      "str2": "conquer"
    },
    {
      "str1": "recursion",
      "str2": "complexity"
    },
    {
      "str1": "data struct",
      "str2": "algorithms"
    },
    {
      "str1": "the quick fox",
      "str2": "the lazy dog"
    },
    {
      "str1": "intention no",
      "str2": "execution"
    },
    {
      "str1": "open source",
      "str2": "closed source"
    },
    {
      "str1": "divide and program",
      "str2": "divided programmin"
    }
  ]
}